Search.setIndex({"alltitles": {"API": [[0, null]], "Contents:": [[6, null]], "Example notebooks \ud83d\udcd4": [[5, null]], "Installation\ud83d\udce6": [[6, "installation"]], "Module contents": [[1, "module-neuralhedge"], [2, "module-neuralhedge.data"], [3, "module-neuralhedge.nn"], [4, "module-neuralhedge.utils"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"]], "Subpackages": [[1, "subpackages"]], "Welcome to NeuralHedge\u2019s documentation!": [[6, null]], "neuralhedge package": [[1, null]], "neuralhedge.data package": [[2, null]], "neuralhedge.data.base module": [[2, "module-neuralhedge.data.base"]], "neuralhedge.data.market module": [[2, "module-neuralhedge.data.market"]], "neuralhedge.data.stochastic module": [[2, "module-neuralhedge.data.stochastic"]], "neuralhedge.nn package": [[3, null]], "neuralhedge.nn.base module": [[3, "module-neuralhedge.nn.base"]], "neuralhedge.nn.blackschole module": [[3, "module-neuralhedge.nn.blackschole"]], "neuralhedge.nn.contigent module": [[3, "module-neuralhedge.nn.contigent"]], "neuralhedge.nn.datahedger module": [[3, "module-neuralhedge.nn.datahedger"]], "neuralhedge.nn.datamanager module": [[3, "module-neuralhedge.nn.datamanager"]], "neuralhedge.nn.loss module": [[3, "module-neuralhedge.nn.loss"]], "neuralhedge.nn.network module": [[3, "module-neuralhedge.nn.network"]], "neuralhedge.nn.trainer module": [[3, "module-neuralhedge.nn.trainer"]], "neuralhedge.utils package": [[4, null]], "neuralhedge.utils.evaluation module": [[4, "neuralhedge-utils-evaluation-module"]], "neuralhedge.utils.plotting module": [[4, "neuralhedge-utils-plotting-module"]]}, "docnames": ["api/modules", "api/neuralhedge", "api/neuralhedge.data", "api/neuralhedge.nn", "api/neuralhedge.utils", "examples", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/modules.rst", "api/neuralhedge.rst", "api/neuralhedge.data.rst", "api/neuralhedge.nn.rst", "api/neuralhedge.utils.rst", "examples.rst", "index.rst"], "indexentries": {"a (neuralhedge.nn.loss.entropicriskmeasure property)": [[3, "neuralhedge.nn.loss.EntropicRiskMeasure.a", false]], "a (neuralhedge.nn.loss.squaremeasure property)": [[3, "neuralhedge.nn.loss.SquareMeasure.a", false]], "admissible_cost() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.admissible_cost", false]], "basemodel (class in neuralhedge.nn.base)": [[3, "neuralhedge.nn.base.BaseModel", false]], "blackscholes (class in neuralhedge.data.stochastic)": [[2, "neuralhedge.data.stochastic.BlackScholes", false]], "blackscholesalpha (class in neuralhedge.nn.blackschole)": [[3, "neuralhedge.nn.blackschole.BlackScholesAlpha", false]], "blackscholesdelta (class in neuralhedge.nn.blackschole)": [[3, "neuralhedge.nn.blackschole.BlackScholesDelta", false]], "blackscholesmeanvariancealpha (class in neuralhedge.nn.blackschole)": [[3, "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlpha", false]], "blackscholesmeanvariancealphaclip (class in neuralhedge.nn.blackschole)": [[3, "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlphaClip", false]], "blackscholesprice (class in neuralhedge.nn.blackschole)": [[3, "neuralhedge.nn.blackschole.BlackScholesPrice", false]], "bs (neuralhedge.data.market.bs_market attribute)": [[2, "neuralhedge.data.market.BS_Market.bs", false]], "bs_delta (neuralhedge.data.market.bs_market attribute)": [[2, "neuralhedge.data.market.BS_Market.bs_delta", false]], "bs_market (class in neuralhedge.data.market)": [[2, "neuralhedge.data.market.BS_Market", false]], "bs_price (neuralhedge.data.market.bs_market attribute)": [[2, "neuralhedge.data.market.BS_Market.bs_price", false]], "bs_pricer (neuralhedge.data.market.bs_market attribute)": [[2, "neuralhedge.data.market.BS_Market.bs_pricer", false]], "compute_alpha() (neuralhedge.nn.blackschole.blackscholesmeanvariancealpha method)": [[3, "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlpha.compute_alpha", false]], "compute_holding_stock_tplus1() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.compute_holding_stock_tplus1", false]], "compute_info_t() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.compute_info_t", false]], "compute_info_t() (neuralhedge.nn.datamanager.manager method)": [[3, "neuralhedge.nn.datamanager.Manager.compute_info_t", false]], "compute_info_t() (neuralhedge.nn.datamanager.wealthmanager method)": [[3, "neuralhedge.nn.datamanager.WealthManager.compute_info_t", false]], "compute_loss() (neuralhedge.nn.base.basemodel method)": [[3, "neuralhedge.nn.base.BaseModel.compute_loss", false]], "compute_loss() (neuralhedge.nn.datahedger.efficienthedger method)": [[3, "neuralhedge.nn.datahedger.EfficientHedger.compute_loss", false]], "compute_loss() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.compute_loss", false]], "compute_loss() (neuralhedge.nn.datamanager.manager method)": [[3, "neuralhedge.nn.datamanager.Manager.compute_loss", false]], "compute_pnl() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.compute_pnl", false]], "compute_prop_hold_tplus1() (neuralhedge.nn.datamanager.manager method)": [[3, "neuralhedge.nn.datamanager.Manager.compute_prop_hold_tplus1", false]], "compute_wealth0_dis() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.compute_wealth0_dis", false]], "contigent (neuralhedge.data.market.bs_market attribute)": [[2, "neuralhedge.data.market.BS_Market.contigent", false]], "data (neuralhedge.data.base.hedgerdataset attribute)": [[2, "neuralhedge.data.base.HedgerDataset.data", false]], "data (neuralhedge.data.base.managerdataset attribute)": [[2, "neuralhedge.data.base.ManagerDataset.data", false]], "efficienthedger (class in neuralhedge.nn.datahedger)": [[3, "neuralhedge.nn.datahedger.EfficientHedger", false]], "entropicriskmeasure (class in neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.EntropicRiskMeasure", false]], "europeanvanilla (class in neuralhedge.nn.contigent)": [[3, "neuralhedge.nn.contigent.EuropeanVanilla", false]], "exp_utility() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.exp_utility", false]], "expected_shortfall() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.expected_shortfall", false]], "expectedshortfall (class in neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.ExpectedShortfall", false]], "fit() (neuralhedge.nn.trainer.trainer method)": [[3, "neuralhedge.nn.trainer.Trainer.fit", false]], "forward() (neuralhedge.nn.blackschole.blackscholesalpha method)": [[3, "neuralhedge.nn.blackschole.BlackScholesAlpha.forward", false]], "forward() (neuralhedge.nn.blackschole.blackscholesdelta method)": [[3, "neuralhedge.nn.blackschole.BlackScholesDelta.forward", false]], "forward() (neuralhedge.nn.blackschole.blackscholesmeanvariancealpha method)": [[3, "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlpha.forward", false]], "forward() (neuralhedge.nn.blackschole.blackscholesmeanvariancealphaclip method)": [[3, "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlphaClip.forward", false]], "forward() (neuralhedge.nn.blackschole.blackscholesprice method)": [[3, "neuralhedge.nn.blackschole.BlackScholesPrice.forward", false]], "forward() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.forward", false]], "forward() (neuralhedge.nn.datamanager.manager method)": [[3, "neuralhedge.nn.datamanager.Manager.forward", false]], "forward() (neuralhedge.nn.loss.entropicriskmeasure method)": [[3, "neuralhedge.nn.loss.EntropicRiskMeasure.forward", false]], "forward() (neuralhedge.nn.loss.expectedshortfall method)": [[3, "neuralhedge.nn.loss.ExpectedShortfall.forward", false]], "forward() (neuralhedge.nn.loss.powermeasure method)": [[3, "neuralhedge.nn.loss.PowerMeasure.forward", false]], "forward() (neuralhedge.nn.loss.squaremeasure method)": [[3, "neuralhedge.nn.loss.SquareMeasure.forward", false]], "forward() (neuralhedge.nn.network.singleweight method)": [[3, "neuralhedge.nn.network.SingleWeight.forward", false]], "forward() (neuralhedge.nn.trainer.trainer method)": [[3, "neuralhedge.nn.trainer.Trainer.forward", false]], "get_hedge_ds() (neuralhedge.data.market.bs_market method)": [[2, "neuralhedge.data.market.BS_Market.get_hedge_ds", false]], "get_manage_ds() (neuralhedge.data.market.bs_market method)": [[2, "neuralhedge.data.market.BS_Market.get_manage_ds", false]], "get_price_delta() (neuralhedge.data.market.bs_market method)": [[2, "neuralhedge.data.market.BS_Market.get_price_delta", false]], "get_prices() (neuralhedge.data.stochastic.blackscholes method)": [[2, "neuralhedge.data.stochastic.BlackScholes.get_prices", false]], "hedger (class in neuralhedge.nn.datahedger)": [[3, "neuralhedge.nn.datahedger.Hedger", false]], "hedgerdataset (class in neuralhedge.data.base)": [[2, "neuralhedge.data.base.HedgerDataset", false]], "l_func() (neuralhedge.nn.loss.expectedshortfall method)": [[3, "neuralhedge.nn.loss.ExpectedShortfall.l_func", false]], "log_utility() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.log_utility", false]], "lossmeasure (class in neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.LossMeasure", false]], "manager (class in neuralhedge.nn.datamanager)": [[3, "neuralhedge.nn.datamanager.Manager", false]], "managerdataset (class in neuralhedge.data.base)": [[2, "neuralhedge.data.base.ManagerDataset", false]], "module": [[1, "module-neuralhedge", false], [2, "module-neuralhedge.data", false], [2, "module-neuralhedge.data.base", false], [2, "module-neuralhedge.data.market", false], [2, "module-neuralhedge.data.stochastic", false], [3, "module-neuralhedge.nn", false], [3, "module-neuralhedge.nn.base", false], [3, "module-neuralhedge.nn.blackschole", false], [3, "module-neuralhedge.nn.contigent", false], [3, "module-neuralhedge.nn.datahedger", false], [3, "module-neuralhedge.nn.datamanager", false], [3, "module-neuralhedge.nn.loss", false], [3, "module-neuralhedge.nn.network", false], [3, "module-neuralhedge.nn.trainer", false], [4, "module-neuralhedge.utils", false]], "neuralhedge": [[1, "module-neuralhedge", false]], "neuralhedge.data": [[2, "module-neuralhedge.data", false]], "neuralhedge.data.base": [[2, "module-neuralhedge.data.base", false]], "neuralhedge.data.market": [[2, "module-neuralhedge.data.market", false]], "neuralhedge.data.stochastic": [[2, "module-neuralhedge.data.stochastic", false]], "neuralhedge.nn": [[3, "module-neuralhedge.nn", false]], "neuralhedge.nn.base": [[3, "module-neuralhedge.nn.base", false]], "neuralhedge.nn.blackschole": [[3, "module-neuralhedge.nn.blackschole", false]], "neuralhedge.nn.contigent": [[3, "module-neuralhedge.nn.contigent", false]], "neuralhedge.nn.datahedger": [[3, "module-neuralhedge.nn.datahedger", false]], "neuralhedge.nn.datamanager": [[3, "module-neuralhedge.nn.datamanager", false]], "neuralhedge.nn.loss": [[3, "module-neuralhedge.nn.loss", false]], "neuralhedge.nn.network": [[3, "module-neuralhedge.nn.network", false]], "neuralhedge.nn.trainer": [[3, "module-neuralhedge.nn.trainer", false]], "neuralhedge.utils": [[4, "module-neuralhedge.utils", false]], "neuralnetsequential (class in neuralhedge.nn.network)": [[3, "neuralhedge.nn.network.NeuralNetSequential", false]], "no_cost() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.no_cost", false]], "optimal_omega() (neuralhedge.nn.loss.entropicriskmeasure method)": [[3, "neuralhedge.nn.loss.EntropicRiskMeasure.optimal_omega", false]], "optimal_omega() (neuralhedge.nn.loss.expectedshortfall method)": [[3, "neuralhedge.nn.loss.ExpectedShortfall.optimal_omega", false]], "optimal_omega() (neuralhedge.nn.loss.squaremeasure method)": [[3, "neuralhedge.nn.loss.SquareMeasure.optimal_omega", false]], "p (neuralhedge.nn.loss.powermeasure property)": [[3, "neuralhedge.nn.loss.PowerMeasure.p", false]], "payoff() (neuralhedge.nn.contigent.europeanvanilla method)": [[3, "neuralhedge.nn.contigent.EuropeanVanilla.payoff", false]], "powermeasure (class in neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.PowerMeasure", false]], "pricer() (neuralhedge.nn.datahedger.hedger method)": [[3, "neuralhedge.nn.datahedger.Hedger.pricer", false]], "proportional_cost() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.proportional_cost", false]], "q (neuralhedge.nn.loss.expectedshortfall property)": [[3, "neuralhedge.nn.loss.ExpectedShortfall.q", false]], "record_history() (neuralhedge.nn.datamanager.manager method)": [[3, "neuralhedge.nn.datamanager.Manager.record_history", false]], "simulate_bm() (in module neuralhedge.data.stochastic)": [[2, "neuralhedge.data.stochastic.simulate_BM", false]], "simulate_bs() (in module neuralhedge.data.stochastic)": [[2, "neuralhedge.data.stochastic.simulate_BS", false]], "simulate_time() (in module neuralhedge.data.stochastic)": [[2, "neuralhedge.data.stochastic.simulate_time", false]], "singleweight (class in neuralhedge.nn.network)": [[3, "neuralhedge.nn.network.SingleWeight", false]], "squaremeasure (class in neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.SquareMeasure", false]], "trainer (class in neuralhedge.nn.trainer)": [[3, "neuralhedge.nn.trainer.Trainer", false]], "value_at_risk() (in module neuralhedge.nn.loss)": [[3, "neuralhedge.nn.loss.value_at_risk", false]], "wealthmanager (class in neuralhedge.nn.datamanager)": [[3, "neuralhedge.nn.datamanager.WealthManager", false]]}, "objects": {"": [[1, 0, 0, "-", "neuralhedge"]], "neuralhedge": [[2, 0, 0, "-", "data"], [3, 0, 0, "-", "nn"], [4, 0, 0, "-", "utils"]], "neuralhedge.data": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "market"], [2, 0, 0, "-", "stochastic"]], "neuralhedge.data.base": [[2, 1, 1, "", "HedgerDataset"], [2, 1, 1, "", "ManagerDataset"]], "neuralhedge.data.base.HedgerDataset": [[2, 2, 1, "", "data"]], "neuralhedge.data.base.ManagerDataset": [[2, 2, 1, "", "data"]], "neuralhedge.data.market": [[2, 1, 1, "", "BS_Market"]], "neuralhedge.data.market.BS_Market": [[2, 2, 1, "", "bs"], [2, 2, 1, "", "bs_delta"], [2, 2, 1, "", "bs_price"], [2, 2, 1, "", "bs_pricer"], [2, 2, 1, "", "contigent"], [2, 3, 1, "", "get_hedge_ds"], [2, 3, 1, "", "get_manage_ds"], [2, 3, 1, "", "get_price_delta"]], "neuralhedge.data.stochastic": [[2, 1, 1, "", "BlackScholes"], [2, 4, 1, "", "simulate_BM"], [2, 4, 1, "", "simulate_BS"], [2, 4, 1, "", "simulate_time"]], "neuralhedge.data.stochastic.BlackScholes": [[2, 3, 1, "", "get_prices"]], "neuralhedge.nn": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "blackschole"], [3, 0, 0, "-", "contigent"], [3, 0, 0, "-", "datahedger"], [3, 0, 0, "-", "datamanager"], [3, 0, 0, "-", "loss"], [3, 0, 0, "-", "network"], [3, 0, 0, "-", "trainer"]], "neuralhedge.nn.base": [[3, 1, 1, "", "BaseModel"]], "neuralhedge.nn.base.BaseModel": [[3, 3, 1, "", "compute_loss"]], "neuralhedge.nn.blackschole": [[3, 1, 1, "", "BlackScholesAlpha"], [3, 1, 1, "", "BlackScholesDelta"], [3, 1, 1, "", "BlackScholesMeanVarianceAlpha"], [3, 1, 1, "", "BlackScholesMeanVarianceAlphaClip"], [3, 1, 1, "", "BlackScholesPrice"]], "neuralhedge.nn.blackschole.BlackScholesAlpha": [[3, 3, 1, "", "forward"]], "neuralhedge.nn.blackschole.BlackScholesDelta": [[3, 3, 1, "", "forward"]], "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlpha": [[3, 3, 1, "", "compute_alpha"], [3, 3, 1, "", "forward"]], "neuralhedge.nn.blackschole.BlackScholesMeanVarianceAlphaClip": [[3, 3, 1, "", "forward"]], "neuralhedge.nn.blackschole.BlackScholesPrice": [[3, 3, 1, "", "forward"]], "neuralhedge.nn.contigent": [[3, 1, 1, "", "EuropeanVanilla"]], "neuralhedge.nn.contigent.EuropeanVanilla": [[3, 3, 1, "", "payoff"]], "neuralhedge.nn.datahedger": [[3, 1, 1, "", "EfficientHedger"], [3, 1, 1, "", "Hedger"]], "neuralhedge.nn.datahedger.EfficientHedger": [[3, 3, 1, "", "compute_loss"]], "neuralhedge.nn.datahedger.Hedger": [[3, 3, 1, "", "compute_holding_stock_tplus1"], [3, 3, 1, "", "compute_info_t"], [3, 3, 1, "", "compute_loss"], [3, 3, 1, "", "compute_pnl"], [3, 3, 1, "", "compute_wealth0_dis"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "pricer"]], "neuralhedge.nn.datamanager": [[3, 1, 1, "", "Manager"], [3, 1, 1, "", "WealthManager"]], "neuralhedge.nn.datamanager.Manager": [[3, 3, 1, "", "compute_info_t"], [3, 3, 1, "", "compute_loss"], [3, 3, 1, "", "compute_prop_hold_tplus1"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "record_history"]], "neuralhedge.nn.datamanager.WealthManager": [[3, 3, 1, "", "compute_info_t"]], "neuralhedge.nn.loss": [[3, 1, 1, "", "EntropicRiskMeasure"], [3, 1, 1, "", "ExpectedShortfall"], [3, 1, 1, "", "LossMeasure"], [3, 1, 1, "", "PowerMeasure"], [3, 1, 1, "", "SquareMeasure"], [3, 4, 1, "", "admissible_cost"], [3, 4, 1, "", "exp_utility"], [3, 4, 1, "", "expected_shortfall"], [3, 4, 1, "", "log_utility"], [3, 4, 1, "", "no_cost"], [3, 4, 1, "", "proportional_cost"], [3, 4, 1, "", "value_at_risk"]], "neuralhedge.nn.loss.EntropicRiskMeasure": [[3, 5, 1, "", "a"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "optimal_omega"]], "neuralhedge.nn.loss.ExpectedShortfall": [[3, 3, 1, "", "forward"], [3, 3, 1, "", "l_func"], [3, 3, 1, "", "optimal_omega"], [3, 5, 1, "", "q"]], "neuralhedge.nn.loss.PowerMeasure": [[3, 3, 1, "", "forward"], [3, 5, 1, "", "p"]], "neuralhedge.nn.loss.SquareMeasure": [[3, 5, 1, "", "a"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "optimal_omega"]], "neuralhedge.nn.network": [[3, 1, 1, "", "NeuralNetSequential"], [3, 1, 1, "", "SingleWeight"]], "neuralhedge.nn.network.SingleWeight": [[3, 3, 1, "", "forward"]], "neuralhedge.nn.trainer": [[3, 1, 1, "", "Trainer"]], "neuralhedge.nn.trainer.Trainer": [[3, 3, 1, "", "fit"], [3, 3, 1, "", "forward"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": 5, "0": [2, 3], "01": 3, "03333333333333333": 2, "1": [2, 3], "100": [2, 3], "10000": 2, "128": 3, "2": [2, 3], "256": 3, "30": 2, "5": 3, "A": 2, "For": 2, "In": 6, "No": 3, "The": 6, "_": 3, "_q": 3, "access": 6, "activ": 3, "ad_bound": 3, "adam": 3, "admiss": 3, "admissible_cost": [1, 3], "after": 3, "afterward": 3, "all": 3, "all_info_t": 3, "alpha": 3, "although": 3, "an": 5, "api": 6, "ar": 6, "arg": 3, "asset": 3, "ax": 3, "b": [1, 2], "base": [0, 1], "basemodel": [1, 3], "batch_siz": 3, "benchmark": 3, "black": [2, 5], "blackschol": [0, 1, 2], "blackscholesalpha": [1, 3], "blackscholesdelta": [1, 2, 3], "blackscholesmeanvariancealpha": [1, 3], "blackscholesmeanvariancealphaclip": [1, 3], "blackscholespric": [1, 2, 3], "bm_path": 2, "bond": 2, "bool": 3, "bound": 3, "bs_delta": [1, 2, 3], "bs_market": [1, 2], "bs_path": 2, "bs_price": [1, 2, 3], "bs_pricer": [1, 2], "call": [2, 3, 5], "care": 3, "cash": 3, "cd": 6, "class": [2, 3, 6], "clip": 3, "clone": 6, "com": 6, "comput": 3, "compute_alpha": [1, 3], "compute_holding_stock_tplus1": [1, 3], "compute_info_t": [1, 3], "compute_loss": [1, 3], "compute_pnl": [1, 3], "compute_prop_hold_tplus1": [1, 3], "compute_wealth0_di": [1, 3], "constant": 3, "contain": 2, "content": 0, "contig": [0, 1, 2], "conveni": 6, "coordin": 3, "cost": 3, "could": 6, "data": [0, 1, 3, 6], "datahedg": [0, 1], "datamanag": [0, 1], "dataset": [2, 3], "decoupl": 6, "deduct": 3, "deep": 5, "defin": 3, "delta": 3, "dens": 3, "develop": 6, "discount": 3, "drift": 2, "driven": 6, "dt": 2, "e": [2, 3, 6], "easi": 6, "effic": 5, "effici": 3, "efficienthedg": [1, 3], "ellipsi": 3, "endow": 5, "entropicriskmeasur": [1, 3], "epoch": 3, "essenti": 6, "european": [2, 5], "europeanvanilla": [1, 2, 3], "evalu": [0, 1], "everi": 3, "exampl": 6, "exp": 3, "exp_util": [1, 3], "expected_shortfal": [1, 3], "expectedshortfal": [1, 3], "f": 3, "fals": 2, "fit": [1, 3], "float": [2, 3], "former": 3, "forward": [1, 3], "free": 2, "fulli": 6, "function": 3, "futur": 6, "g": 2, "gener": 2, "get": 2, "get_hedge_d": [1, 2], "get_manage_d": [1, 2], "get_pric": [1, 2], "get_price_delta": [1, 2], "git": 6, "github": 6, "hedg": [2, 3, 5, 6], "hedge_d": 2, "hedger": [1, 3], "hedger_d": 3, "hedgerdataset": [1, 2], "here": 3, "histori": 3, "hold": 3, "holding_diff": 3, "hook": 3, "http": 6, "i": [2, 3, 6], "ignor": 3, "implement": 6, "info": [2, 3], "info_dyn": 3, "infom": 3, "inform": [2, 3], "init_pric": 2, "init_wealth": 3, "initi": 2, "input": [3, 6], "input_t": 3, "instanc": 3, "instead": 3, "insuffic": 5, "int": 3, "justinhou95": 6, "kernel": 3, "kwarg": 3, "l_func": [1, 3], "last": 3, "latest": 6, "latter": 3, "librari": 6, "light": 6, "list": 3, "log": 3, "log_pric": 3, "log_util": [1, 3], "loss": [0, 1], "lossmeasur": [1, 3], "lr": 3, "lr_scheduler_gamma": 3, "made": 6, "mainten": 6, "make": 6, "manag": [1, 2, 3], "manage_d": 2, "managerdataset": [1, 2], "market": [0, 1], "mathbb": 3, "mathrm": 3, "max": 3, "maxim": [5, 6], "mean": [3, 5], "merton": [3, 5], "mode": 6, "model": [3, 5, 6], "modul": 0, "mu": [2, 3], "n_asset": 2, "n_featur": 2, "n_layer": 3, "n_output": 3, "n_sampl": [2, 3], "n_step": 2, "n_timestep": [2, 3], "n_unit": 3, "need": 3, "network": [0, 1, 5, 6], "neural": [5, 6], "neuralhedg": 0, "neuralnetsequenti": [1, 3], "nn": [0, 1, 2], "no_cost": [1, 3], "none": 3, "notebook": 6, "number": 2, "object": 2, "one": 3, "onli": 6, "optim": [3, 5, 6], "optimal_omega": [1, 3], "option": [2, 5], "output": 3, "overridden": 3, "own": 6, "p": [1, 3], "packag": [0, 6], "param": 3, "paramet": [2, 3], "part": 2, "partial": 5, "particular": 6, "pass": 3, "payoff": [1, 2, 3], "penal": 3, "penalti": 3, "perform": 3, "person": 6, "pip": 6, "plot": [0, 1], "portfolio": [2, 3, 5, 6], "powermeasur": [1, 3], "price": [2, 3], "price_now": 3, "pricer": [1, 3], "problem": [3, 5, 6], "process": 3, "profit": 3, "prop": 3, "properti": 3, "proport": 3, "proportional_cost": [1, 3], "propot": 3, "python": 6, "pytorch": 6, "q": [1, 3], "r": [2, 3], "rate": 2, "realiz": 6, "recip": 3, "record": 3, "record_histori": [1, 3], "redund": 2, "regist": 3, "releas": 6, "reli": 6, "relu": 3, "repo": 6, "return": [2, 3], "revers": 2, "rho": 3, "risk": [2, 3], "risk_free_r": 3, "riski": 3, "run": 3, "sampl": 2, "schole": [2, 5], "script": 6, "self": 2, "sequenti": 3, "shape": [2, 3], "should": 3, "sigma": [2, 3], "silent": 3, "simulate_b": [1, 2], "simulate_bm": [1, 2], "simulate_tim": [1, 2], "sinc": 3, "singleweight": [1, 3], "solver": 6, "squaremeasur": [1, 3], "stabl": 6, "stochast": [0, 1], "stock": 2, "strategi": [3, 6], "strike": 3, "subclass": 3, "submodul": [0, 1], "subpackag": 0, "t": 3, "take": 3, "tensor": [2, 3], "test": 6, "them": 3, "theoret": 2, "thi": [3, 6], "time": 3, "time_path": 2, "time_to_matur": 3, "timestep": 2, "torch": [2, 3], "trade": 3, "train": 3, "trainer": [0, 1], "true": 3, "tupl": 2, "tutori": 6, "type": [2, 3], "under": 5, "up": 6, "us": 3, "util": [0, 1, 3, 5, 6], "utility_func": 3, "value_at_risk": [1, 3], "var": 3, "varianc": [3, 5], "venv": 6, "veri": 6, "version": 6, "volatil": 2, "we": 3, "wealth": 3, "wealthmanag": [1, 3], "weight": 6, "where": 6, "while": 3, "within": 3, "wstar": 3, "x": 3, "you": 6, "your": 6}, "titles": ["API", "neuralhedge package", "neuralhedge.data package", "neuralhedge.nn package", "neuralhedge.utils package", "Example notebooks \ud83d\udcd4", "Welcome to NeuralHedge\u2019s documentation!"], "titleterms": {"": 6, "api": 0, "base": [2, 3], "blackschol": 3, "content": [1, 2, 3, 4, 6], "contig": 3, "data": 2, "datahedg": 3, "datamanag": 3, "document": 6, "evalu": 4, "exampl": 5, "instal": 6, "loss": 3, "market": 2, "modul": [1, 2, 3, 4], "network": 3, "neuralhedg": [1, 2, 3, 4, 6], "nn": 3, "notebook": 5, "packag": [1, 2, 3, 4], "plot": 4, "stochast": 2, "submodul": [2, 3, 4], "subpackag": 1, "trainer": 3, "util": 4, "welcom": 6}})